<?xml version="1.0" encoding="utf-8"?>
<!--
	For more information on how to configure your ASP.NET application, please visit
	http://go.microsoft.com/fwlink/?LinkId=169433
	-->
<configuration>
	<configSections>
		<sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
			<section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
			<section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
			<section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" />
			<section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" />
		</sectionGroup>
	</configSections>
	<connectionStrings>
		<add name="baza_pacjentow_v2ConnectionString" connectionString="Data Source = SQL5018.myASP.NET; Initial Catalog = DB_9FC542_wero15; User Id = DB_9FC542_wero15_admin; Password = robocze1;" providerName="System.Data.SqlClient" />
	</connectionStrings>
	<system.web>
		<compilation targetFramework="4.5" />
		<!--nowe-->
		<httpHandlers>
			<add verb="GET" path="CaptchaImage.axd" type="MSCaptcha.CaptchaImageHandler, MSCaptcha" />
		</httpHandlers>
		<authorization>
			<allow users="*" />
			<!--<deny users="?"/>-->
		</authorization>
		<!--nowe-->
		<httpRuntime targetFramework="4.5" />
		<pages>
			<namespaces>
				<add namespace="System.Web.Optimization" />
			</namespaces>
		<controls>
			<add assembly="Microsoft.AspNet.Web.Optimization.WebForms" namespace="Microsoft.AspNet.Web.Optimization.WebForms" tagPrefix="webopt" />
		</controls></pages>
		<authentication mode="Forms">
			<forms loginUrl="~/Account/Login" timeout="2880" defaultUrl="~/" />
		</authentication>
		<profile defaultProvider="DefaultProfileProvider">
			<providers>
				<add name="DefaultProfileProvider" type="System.Web.Providers.DefaultProfileProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" applicationName="/" />
			</providers>
		</profile>
		<membership defaultProvider="DefaultMembershipProvider">
			<providers>
				<add name="DefaultMembershipProvider" type="System.Web.Providers.DefaultMembershipProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" applicationName="/" />
			</providers>
		</membership>
		<roleManager defaultProvider="DefaultRoleProvider">
			<providers>
				<add name="DefaultRoleProvider" type="System.Web.Providers.DefaultRoleProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" applicationName="/" />
			</providers>
		</roleManager>
		<!--
						If you are deploying to a cloud environment that has multiple web server instances,
						you should change session state mode from "InProc" to "Custom". In addition,
						change the connection string named "DefaultConnection" to connect to an instance
						of SQL Server (including SQL Azure and SQL  Compact) instead of to SQL Server Express.
			-->
		<sessionState mode="InProc" customProvider="DefaultSessionProvider">
			<providers>
				<add name="DefaultSessionProvider" type="System.Web.Providers.DefaultSessionStateProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" />
			</providers>
		</sessionState>
	</system.web>
	<runtime>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="EntityFramework" publicKeyToken="B77A5C561934E089" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-5.0.0.0" newVersion="5.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="2780ccd10d57b246" />
				<bindingRedirect oldVersion="1.0.0.0-4.0.0.0" newVersion="4.1.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780ccd10d57b246" />
				<bindingRedirect oldVersion="1.0.0.0-4.0.0.0" newVersion="4.1.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		<!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). -->
		<legacyHMACWarning enabled="0" />
		<!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
				 to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		 -->
	</runtime>
	<system.net>
		<defaultProxy enabled="true" />
		<settings>
			<!-- This setting causes .NET to check certificate revocation lists (CRL) 
					 before trusting HTTPS certificates.  But this setting tends to not 
					 be allowed in shared hosting environments. -->
			<!--<servicePointManager checkCertificateRevocationList="true"/>-->
		</settings>
	</system.net>
	<uri>
		<!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
				 which is necessary for OpenID urls with unicode characters in the domain/host name.
				 It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
		<idn enabled="All" />
		<iriParsing enabled="true" />
	</uri>
    <system.webServer>
        <directoryBrowse enabled="false" />
        <defaultDocument>
            <files>
                <add value="Logowanie.aspx" />
            </files>
        </defaultDocument>
        <handlers>
            <add name="CaptchaImage.axd_GET" path="CaptchaImage.axd" verb="GET" type="MSCaptcha.CaptchaImageHandler, MSCaptcha" preCondition="integratedMode,runtimeVersionv2.0" />
        </handlers>
    </system.webServer>
</configuration>
